---
openapi: 3.0.0
info:
  title: Swagger Vulcan
  description: "C'est une api qui à pour but de créer un site d'Hotel avec  tout un backoffice qui permet d'administrer le site via un WYSIWYG \n"
  contact:
    email: theo.colombel@le-campus-numerique.fr
  version: 2.0.0
servers:
- url: https://virtserver.swaggerhub.com/THEOCOLOMBEL/api-vulcan/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Rooms
  description: Everything about the hotel rooms
- name: Reviews
  description: Everything about the hotel reviews
- name: Services
  description: Everything about the hotel Services
- name: Actualities
  description: Everything about the hotel News
- name: Hero
  description: Everything about the hotel Hero
- name: Footer
  description: Everything about the hotel Footer
- name: Header
  description: Everything about the hotel Header
- name: Video
  description: Everything about the hotel Video
- name: Mailing list
  description: Everything about the hotel mailing list
paths:
  /api/rooms:
    get:
      tags:
      - Rooms
      summary: returns all existing rooms
      requestBody:
        $ref: '#/components/requestBodies/Room'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Rooms not found
        "405":
          description: Validation exception
    post:
      tags:
      - Rooms
      summary: Creates a new room
      requestBody:
        $ref: '#/components/requestBodies/Room'
      responses:
        "200":
          description: Room created
        "400":
          description: Bad request
        "404":
          description: Rooms not found
        "405":
          description: Validation exception
  /api/rooms/{id}:
    get:
      tags:
      - Rooms
      summary: returns specified room 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Room not found
        "405":
          description: Validation exception
    put:
      tags:
      - Rooms
      summary: Updates specified room
      requestBody:
        $ref: '#/components/requestBodies/Room'
      responses:
        "200":
          description: Room updated !
        "400":
          description: Bad request
        "404":
          description: Room not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Rooms
      summary: Updates specified room
      requestBody:
        $ref: '#/components/requestBodies/Room'
      responses:
        "200":
          description: Room updated !
        "400":
          description: Bad request
        "404":
          description: Room not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Rooms
      summary: Deletes specified room
      requestBody:
        $ref: '#/components/requestBodies/Room'
      responses:
        "200":
          description: Room deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: Room not found
        "405":
          description: Validation exception
  /api/rooms/active:
    get:
      tags:
      - Rooms
      summary: returns rooms to display on front page, with attribute isActive set to true. 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: active rooms not found
        "405":
          description: Validation exception
  /api/actualities:
    get:
      tags:
      - Actualities
      summary: returns all existing actualities.
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Actualities not found
        "405":
          description: Validation exception
    post:
      tags:
      - Actualities
      summary: Creates a new actuality
      requestBody:
        $ref: '#/components/requestBodies/Actualities'
      responses:
        "200":
          description: Actuality created
        "400":
          description: Invalid ID supplied
        "404":
          description: Validation exception
  /api/actualities/{id}:
    get:
      tags:
      - Actualities
      summary: returns specified actuality. 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Actuaity not found
        "405":
          description: Validation exception
    put:
      tags:
      - Actualities
      summary: Updates specified actuality. 
      requestBody:
        $ref: '#/components/requestBodies/Actualities'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Actuality not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    patch:
      tags:
      - Actualities
      summary: Updates specified actuality. 
      requestBody:
        $ref: '#/components/requestBodies/Actualities'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Actuality not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    delete:
      tags:
      - Actualities
      summary: Deletes specified actuality
      requestBody:
        $ref: '#/components/requestBodies/Actualities'
      responses:
        "200":
          description: Actuailty deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: News not found
  /api/actualities/active:
    get:
      tags:
      - Actualities
      summary: returns actualities to display on front page, with attribute isActive set to true. 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: active actualities not found
        "405":
          description: Validation exception
  /api/services:
    get:
      tags:
      - Services
      summary: returns all existing hotel services
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Services not found
        "405":
          description: Validation exception
    post:
      tags:
      - Services
      summary: Creates a new service
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "200":
          description: service created
        "400":
          description: Bad Request
        "404":
          description: service not found
        "405":
          description: Validation exception
  /api/services/{id}:
    get:
      tags:
      - Services
      summary: returns specified service 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: service not found
        "405":
          description: Validation exception
    put:
      tags:
      - Services
      summary: Updates specified service
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: review not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    patch:
      tags:
      - Services
      summary: Updates specified service
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: review not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    delete:
      tags:
      - Services
      summary: Deletes specified service
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "200":
          description: service deleted
        "404":
          description: service not found
  /api/services/active:
    get:
      tags:
      - Services
      summary: returns services to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Services not found
  /api/reviews:
    get:
      tags:
      - Reviews
      summary: returns all existing customer reviews
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Reviews not found
        "405":
          description: Validation exception
    post:
      tags:
      - Reviews
      summary: Creates a new customer review
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "200":
          description: review created
        "400":
          description: Invalid ID supplied
        "404":
          description: Validation exception
        "405":
          description: Validation exception
  /api/reviews/{id}:
    get:
      tags:
      - Reviews
      summary: returns specified customer review
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer review not found
        "405":
          description: Validation exception
    put:
      tags:
      - Reviews
      summary: Updates specified customer review
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: review not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    patch:
      tags:
      - Reviews
      summary: Updates specified customer review
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: review not found
        "405":
          description: Validation exception
        "200":
          description: Update Done !
    delete:
      tags:
      - Reviews
      summary: Deletes specified customer review
      requestBody:
        $ref: '#/components/requestBodies/Reviews'
      responses:
        "200":
          description: Reviews delete
        "400":
          description: Invalid ID supplied
        "404":
          description: Review not found
        "405":
          description: Validation exception
  /api/reviews/active:
    get:
      tags:
      - Reviews
      summary: returns reviews to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Services not found
  /api/headers:
    get:
      tags:
      - Header
      summary: returns all existing Header
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Header not found
        "405":
          description: Validation exception
    post:
      tags:
      - Header
      summary: Creates a new Header
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Header not found
        "405":
          description: Validation exception
  /api/headers/{id}:
    get:
      tags:
      - Header
      summary:  returns specified Header 
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Header not found
        "405":
          description: Validation exception
    put:
      tags:
      - Header
      summary: Updates specified Header
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Header not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Header
      summary: Updates specified Header
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Header not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Header
      summary: Deletes specified Header
      requestBody:
        $ref: '#/components/requestBodies/Header'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Header not found
        "405":
          description: Validation exception
  /api/headers/active:
    get:
      tags:
      - Header
      summary: returns header to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Services'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Services not found
  /api/footers:
    get:
      tags:
      - Footer
      summary: returns all existing page footers
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Page footers not found
        "405":
          description: Validation exception
    post:
      tags:
      - Footer
      summary: Creates a new footer
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: footer created
        "400":
          description: Invalid ID supplied
        "404":
          description: Page footer not found
        "405":
          description: Validation exception
  /api/footers/{id}:
    get:
      tags:
      - Footer
      summary: returns specified page footer
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page footer not found
        "405":
          description: Validation exception
    put:
      tags:
      - Footer
      summary: Updates specified footer
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: footer not found
        "405":
          description: Validation exception
        "200":
          description: OK
    patch:
      tags:
      - Footer
      summary: Updates specified footer
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: footer not found
        "405":
          description: Validation exception
        "200":
          description: OK
    delete:
      tags:
      - Footer
      summary: Deletes specified footer
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Footer not found
        "405":
          description: Validation exception
  /api/footers/active:
    get:
      tags:
      - Footer
      summary: returns footer to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Page footers not found
        "405":
          description: Validation exception
  /api/heroes:
    get:
      tags:
      - Hero
      summary: returns all existing page heroes
      requestBody:
        $ref: '#/components/schemas/Hero' 
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Page heroes not found
        "405":
          description: Validation exception
    post:
      tags:
      - Hero
      summary: creates a new hero
      requestBody:
        $ref: '#/components/schemas/Hero'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page hero not found
        "405":
          description: Validation exception
  /api/heroes/{id}:
    get:
      tags:
      - Hero
      summary: returns specified page hero record
      requestBody:
        $ref: '#/components/schemas/Hero'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page hero not found
        "405":
          description: Validation exception
    put:
      tags:
      - Hero
      summary: updates specified hero
      requestBody:
        $ref: '#/components/schemas/Hero'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page hero not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Hero
      summary: updates specified hero
      requestBody:
        $ref: '#/components/schemas/Hero'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page hero not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Hero
      summary: deletes specified hero
      requestBody:
        $ref: '#/components/schemas/Hero'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Page hero not found
        "405":
          description: Validation exception
  /api/heroes/active:
    get:
      tags:
      - Hero
      summary: returns hero to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Page footers not found
        "405":
          description: Validation exception
  /api/videos:
    get:
      tags:
      - Video
      summary: returns specified videos
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Videos not found
        "405":
          description: Validation exception
    post:
      tags:
      - Video
      summary: Creates a new video
      requestBody:
        $ref: '#/components/requestBodies/Video'
      responses:
        "200":
          description: video created
        "400":
          description: Invalid ID supplied
        "404":
          description: Validation exception
  /api/videos/{id}:
    get:
      tags:
      - Video
      summary: returns specified video record
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Video not found
        "405":
          description: Validation exception
    put:
      tags:
      - Video
      summary: Updates specified Video
      requestBody:
        $ref: '#/components/requestBodies/Video'
      responses:
        "200":
          description: video updated
        "400":
          description: Invalid ID supplied
        "404":
          description: video not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Video
      summary: Updates specified Video
      requestBody:
        $ref: '#/components/requestBodies/Video'
      responses:
        "200":
          description: video updated
        "400":
          description: Invalid ID supplied
        "404":
          description: video not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Video
      summary: Deletes specified video
      requestBody:
        $ref: '#/components/requestBodies/Video'
      responses:
        "200":
          description: Video deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: Video not found
        "405":
          description: Validation exception
  /api/videos/active:
    get:
      tags:
      - Video
      summary: returns videos to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Videos not found
        "405":
          description: Validation exception
  /api/links:
    get:
      tags:
      - Link
      summary: return all existing Link
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Link not found
        "405":
          description: Validation exception
    post:
      tags:
      - Link
      summary: Creates a new Link
      requestBody:
        $ref: '#/components/requestBodies/Link'
      responses:
        "200":
          description: Link created
        "400":
          description: Invalid ID supplied
        "404":
          description: Validation exception
  /api/links/{id}:
    get:
      tags:
      - Link
      summary: returns specified Link record 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Link not found
        "405":
          description: Validation exception
    put:
      tags:
      - Link
      summary: Updates specified Link
      requestBody:
        $ref: '#/components/requestBodies/Link'
      responses:
        "200":
          description: Link update
        "400":
          description: Invalid ID supplied
        "404":
          description: Link not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Link
      summary: Updates specified Link
      requestBody:
        $ref: '#/components/requestBodies/Link'
      responses:
        "200":
          description: Link update
        "400":
          description: Invalid ID supplied
        "404":
          description: Link not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Link
      summary: Delete specified Link
      requestBody:
        $ref: '#/components/requestBodies/Link'
      responses:
        "200":
          description: Link delete
        "400":
          description: Invalid ID supplied
        "404":
          description: Link not found
        "405":
          description: Validation exception
  /api/links/active:
    get:
      tags:
      - Link
      summary: returns links to display on front page, with attribute isActive set to true.
      requestBody:
        $ref: '#/components/requestBodies/Footer'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Page footers not found
        "405":
          description: Validation exception
  /api/mailinglists:
    get:
      tags:
      - Mailing list
      summary: return all existing email addresses in th mailing list table
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: email addresses not found
        "405":
          description: Validation exception
    post:
      tags:
      - Mailing list
      summary: Creates a new email in the mailing list table
      requestBody:
        $ref: '#/components/requestBodies/MailingList'
      responses:
        "200":
          description: email addresse created
        "400":
          description: Invalid ID supplied
        "404":
          description: Validation exception
  /api/mailinglists/{id}:
    get:
      tags:
      - Mailing list
      summary: returns specified email address 
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: email address not found
        "405":
          description: Validation exception
    put:
      tags:
      - Mailing list
      summary: Updates specified email address
      requestBody:
        $ref: '#/components/requestBodies/MailingList'
      responses:
        "200":
          description: email address updated
        "400":
          description: Invalid ID supplied
        "404":
          description: email address not found
        "405":
          description: Validation exception
    patch:
      tags:
      - Mailing list
      summary: Updates specified email address
      requestBody:
        $ref: '#/components/requestBodies/MailingList'
      responses:
        "200":
          description: email address updated
        "400":
          description: Invalid ID supplied
        "404":
          description: email address not found
        "405":
          description: Validation exception
    delete:
      tags:
      - Mailing list
      summary: Deletes specified email address
      requestBody:
        $ref: '#/components/requestBodies/MailingList'
      responses:
        "200":
          description: email address deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: email address not found
        "405":
          description: Validation exception
components: 
  schemas:
    Room:
      type: object
      properties:
        id:
          type: integer
        name: 
          type: string
        image:
          type: string
        description:
          type: string
        price:
          type: integer
        roomType:
          type: string
        personPerRoom:
          type: integer
    Actualities:
      type: object
      properties:
        id:
          type: integer
        title: 
          type: string
        image:
          type: string
        description:
          type: string
        date:
          type: string
    Services:
      type: object
      properties:
        id:
          type: integer
        title: 
          type: string
        icon:
          type: string
        description:
          type: string
    Reviews:
      type: object
      properties:
        id:
          type: integer
        title: 
          type: string
        description:
          type: string
        rating:
          type: integer
        username:
          type: string
        userAvatar:
          type: string
    Header:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
    Footer:
      type: object
      properties:
        id:
          type: integer
        links:
          type: array
    Video:
      type: object
      properties:
        id:
          type: integer
        link:
          type: string
    Hero:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        slogan:
          type: string
        image_logo:
          type: string
    Link:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        name:
          type: string
    MailingList:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
  requestBodies:
    Room:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Room'
      required: true
    Actualities:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Actualities'
      required: true
    Header:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Header'
      required: true
    Services:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Services'
      required: true
    Reviews:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reviews'
      required: true
    Footer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Footer'
      required: true
    Video:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Video'
      required: true
    Hero:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hero'
      required: true
    Link:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Link'
      required: true 
    MailingList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailingList'
      required: true 